compose
  class Point(x:@ y:@) {
    add(p:(x:@ y:@)) -> Point {
      (x + p.x
       y + p.y)
    }
    add2(p:(x:@ y:@)) -> (@ @) {
      (x + p.x
       y + p.y)
    }
    inc(q:@) -> @ {
      +(q)
    }
  }
;

let origin = Point(12 23);
origin.add(30 19)

/*
!=
=>  mini=mini
=>
  ^=  door
  |_  x=@
  ++  add
    |=  p=[x=@ y=@]
    (add:mini x x.p)
  ++  inc
    |=  q=@
    +(q)
  --
=/  origin
  ~(. door 50)
(add:origin [70 80])
*/
