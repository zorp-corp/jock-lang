compose
  class Point(x:@ y:@) {
    // load() is the required constructor
    load(ix:@ iy:@) -> Point {
      // the constructor return must match the state shape
      (ix iy)
    }
    add(p:Point) -> Point {
      // we don't have infix operators yet so this is just a foobar
      (p.x p.y)
    }
  }
; // end compose

// works as of 0ea948770a59c4e7fe2b2b42b0d534bea3449f83
// Point(70 80)

// works ditto
// let vector = Point(70 80);
// vector

// fails
// let origin:Point = Point(50 60);
// origin

// fails
let origin:Point = Point(50 60);
origin.add(70 80)

// fails
// Point(50 60).add(70 80)
