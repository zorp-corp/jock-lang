compose
  class Point(x:@ y:@) {
    // load() is the required constructor
    load(x:@ y:@) -> Point {
      // the constructor return must match the state shape
      (x y)
    }
    add(p:Point) -> Point {
      // we don't have infix operators yet so this is just a foobar
      (x p.y)
    }
  }
; // end compose

// uses the implicit load() constructor
//let origin:Point = Point(50 60);
// let vector = Point(70 80);
Point(70 80)

//origin.add(70 80)
// vector
